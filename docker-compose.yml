services:
  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  web:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.dev
      platforms:
        - linux/arm64
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
      - node_modules:/rails/node_modules
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_HOST: db
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: ""
      REDIS_URL: redis://redis:6379/1
      RAILS_ENV: development
      RAILS_LOG_TO_STDOUT: "true"
    stdin_open: true
    tty: true

  css:
    platform: linux/arm64
    build:
      context: .
      dockerfile: Dockerfile.dev
      platforms:
        - linux/arm64
    command: bundle exec rails tailwindcss:watch
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
      - node_modules:/rails/node_modules
    environment:
      RAILS_ENV: development
    tty: true

volumes:
  postgres_data:
  bundle_cache:
  node_modules: